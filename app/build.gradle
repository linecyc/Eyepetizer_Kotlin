apply plugin: 'com.android.application'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def versionMajor = 1
def versionMinor = 0
def versionPatch = 0
def versionBuild = 1



android {

  compileSdkVersion rootProject.ext.compileSdkVersion
  buildToolsVersion rootProject.ext.buildToolsVersion

  // aaptOptions.cruncherEnabled = false
  // aaptOptions.useNewCruncher = false

  defaultConfig {
    minSdkVersion rootProject.ext.minSdkVersion
    targetSdkVersion rootProject.ext.targetSdkVersion
    versionCode versionMajor * 1000 + versionMinor * 100 + versionPatch * 10 + versionBuild
    versionName "${versionMajor}.${versionMinor}.${versionPatch}.${versionBuild}"
    vectorDrawables.useSupportLibrary = true

    ndk {
      //设置支持的SO库架构
      abiFilters 'armeabi', 'armeabi-v7a', 'x86'
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
  packagingOptions {
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/rxjava.properties'
  }


  signingConfigs {

    debug {
      storeFile file("../debug.keystore")
      storePassword "android"
      keyAlias "androiddebugkey"
      keyPassword "android"
    }
  }



  buildTypes {
    debug {
      //shrinkResources true
      minifyEnabled false
      signingConfig signingConfigs.debug
    }
    release {
      //shrinkResources true

      minifyEnabled false
      signingConfig signingConfigs.debug
      //applicationIdSuffix ".release"
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }

    applicationVariants.all { variant ->
      variant.outputs.all { output ->
        def apkName = 'app' + '-' + variant.versionName
        if (!variant.flavorName.isEmpty()) {
          apkName += ('-' + variant.flavorName)
        }
        outputFileName = apkName + '.apk'
      }
    }
  }

  flavorDimensions "tier"
  productFlavors {
    product {
      //dimension "tier"
      applicationId "com.linecy"
    }
    internal {
      //dimension "tier"
      applicationId "com.linecy.copy"
      //matchingFallbacks = ['demo', 'trial']
    }
  }

  dataBinding {
    enabled = true
  }
}

//同时引入kapt rootProject.ext.dataBindingCompiler 解决Unresolved reference: databinding或者failed for task ':app:compileReleaseJavaWithJavac'.
// java.lang.annotation.IncompleteAnnotationException: android.databinding.BindingBuildInfo missing element enableDebugLogs
kapt {
  generateStubs = true
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation rootProject.ext.appcompat
  implementation rootProject.ext.kotlinStdlib
  implementation rootProject.ext.androidDesign
  kapt rootProject.ext.dataBindingCompiler
  testImplementation rootProject.ext.junit

  implementation rootProject.ext.lifecycleRuntime
  implementation rootProject.ext.lifecycleExtensions
  implementation rootProject.ext.lifecycleJava8
  kapt rootProject.ext.lifecycleCompiler
  implementation rootProject.ext.roomRuntime
  kapt rootProject.ext.roomCompiler
  //testCompile rootProject.ext.roomTesting
  implementation rootProject.ext.room

  //dagger for android
  implementation rootProject.ext.dagger
  implementation rootProject.ext.daggerSupport
  kapt rootProject.ext.daggerCompiler
  kapt rootProject.ext.daggerProcessor

  implementation rootProject.ext.rxJava2
  implementation rootProject.ext.rxAndroid2
  //  implementation rootProject.ext.rxPreferences

  implementation rootProject.ext.okHttp
  implementation rootProject.ext.okHttpLoggingInterceptor
  implementation rootProject.ext.moshi
  implementation rootProject.ext.moshiAdapters
  implementation rootProject.ext.retrofit
  implementation rootProject.ext.retrofitAdapterRxJava
  implementation rootProject.ext.retrofitConverterMoshi
  implementation rootProject.ext.timber
  implementation rootProject.ext.glide
  implementation rootProject.ext.ijkplayer
  implementation rootProject.ext.ijkplayerArmv7
  implementation rootProject.ext.ijkplayerArmv5
  implementation rootProject.ext.ijkplayerArm64
  implementation rootProject.ext.ijkplayerX86
  implementation rootProject.ext.ijkplayerX86_64
  implementation rootProject.ext.ijkplayerExo
  implementation rootProject.ext.constraintLayout

  implementation project(':module-eyepetizer')
}
repositories {
  mavenCentral()
}
